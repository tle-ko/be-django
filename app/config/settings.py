"""
Django settings for project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import datetime
import os
import pathlib

from django.conf import global_settings


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = pathlib.Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

DEBUG = os.environ["DEBUG"] == 1

SECRET_KEY = os.environ["SECRET_KEY"]
GEMINI_API_KEY = os.environ["GEMINI_API_KEY"]

ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    os.environ["HOST"],
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "corsheaders",
    "drf_yasg",
    "rest_framework",
    'rest_framework_simplejwt',

    "users",
    'apps.background_task',
    "apps.boj",
    "apps.crews",
    "apps.activities",
    "apps.applications",
    "apps.llms",
    "apps.problems",
    "apps.submissions",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

if os.environ["POSTGRES_ENABLE"] == 1:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": os.environ["POSTGRES_DB"],
            "USER": os.environ["POSTGRES_USER"],
            "PASSWORD": os.environ["POSTGRES_PASSWORD"],
            "HOST": os.environ["POSTGRES_HOST"],
            "PORT": 5432,
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_USER_MODEL = 'users.User'

AUTHENTICATION_BACKENDS = [
    'users.backends.UserAuthBackend',
]

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=60),
    'SLIDING_TOKEN_REFRESH_LIFETIME': datetime.timedelta(days=100),
    'SLIDING_TOKEN_REFRESH_LIFETIME_GRACE_PERIOD': datetime.timedelta(days=100),
    'SLIDING_TOKEN_REFRESH_MAX_LIFETIME': datetime.timedelta(days=200),
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

STATIC_ROOT = BASE_DIR / '.static'


# Meida files (Images)
# https://docs.djangoproject.com/en/4.2/topics/files/

MEDIA_URL = "media/"

MEDIA_ROOT = BASE_DIR.parent / "data"


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

DEFAULT_EXCEPTION_REPORTER = "config.utils.NACLExceptionReporter"

APPEND_SLASH = False

# Swagger Settings (DRf-YASG)

SWAGGER_SETTINGS = {
    "LOGIN_URL": "/api/v1/auth/signin",
    "LOGOUT_URL": "/api/v1/auth/signout",
}


# Django Background Tasks

BACKGROUND_TASK_ASYNC_THREADS = 1

if os.environ["BACKGROUND_TASK_ENABLE"] == 1:
    BACKGROUND_TASK_AUTO_RUN = True
else:
    BACKGROUND_TASK_AUTO_RUN = False


# CORS
# https://pypi.org/project/django-cors-headers/

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True


# Email Settings
# https://docs.djangoproject.com/en/4.2/topics/email/

if os.environ["GMAIL_ENABLE"] == 1:
    EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
    EMAIL_HOST = "smtp.gmail.com"
    EMAIL_USE_TLS = True
    EMAIL_PORT = 587
    EMAIL_HOST_USER = os.environ["GMAIL_USERNAME"]
    EMAIL_HOST_PASSWORD = os.environ["GMAIL_PASSWORD"]
    DEFAULT_FROM_EMAIL = os.environ["GMAIL_USERNAME"]+"@gmail.com"
else:
    EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
    EMAIL_FILE_PATH = "/logs"


# Fixtures
# https://docs.djangoproject.com/en/4.2/howto/initial-data/
if DEBUG:
    FIXTURE_DIRS = [*global_settings.FIXTURE_DIRS, BASE_DIR / "fixtures"]


GEMINI_API_KEY = os.environ["GEMINI_API_KEY"]
