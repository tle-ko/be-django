# Generated by Django 4.2.15 on 2024-09-19 08:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("problems", "0001_initial"),
        ("crews", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CrewActivityDAO",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(help_text='활동 이름을 입력해주세요. (예: "1회차")')),
                ("start_at", models.DateTimeField(help_text="활동 시작 일자를 입력해주세요.")),
                ("end_at", models.DateTimeField(help_text="활동 종료 일자를 입력해주세요.")),
                (
                    "crew",
                    models.ForeignKey(
                        help_text="크루를 입력해주세요.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crews.crewdao",
                    ),
                ),
            ],
            options={
                "ordering": ["start_at"],
                "get_latest_by": ["end_at"],
            },
        ),
        migrations.CreateModel(
            name="CrewActivityProblemDAO",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        help_text="문제 순서를 입력해주세요.",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "activity",
                    models.ForeignKey(
                        help_text="활동을 입력해주세요.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="activities.crewactivitydao",
                    ),
                ),
                (
                    "crew",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="crews.crewdao"
                    ),
                ),
                (
                    "problem",
                    models.ForeignKey(
                        help_text="문제를 입력해주세요.",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="problems.problem",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="CrewActivitySubmissionDAO",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.TextField(help_text="유저의 코드를 입력해주세요.")),
                (
                    "language",
                    models.TextField(
                        choices=[
                            ("nodejs", "Node.js"),
                            ("kotlin", "Kotlin"),
                            ("swift", "Swift"),
                            ("cpp", "C++"),
                            ("java", "Java"),
                            ("python", "Python"),
                            ("c", "C"),
                            ("javascript", "JavaScript"),
                            ("csharp", "C#"),
                            ("ruby", "Ruby"),
                            ("php", "PHP"),
                        ],
                        help_text="유저의 코드 언어를 입력해주세요.",
                    ),
                ),
                (
                    "is_correct",
                    models.BooleanField(help_text="유저의 코드가 정답인지 여부를 입력해주세요."),
                ),
                (
                    "is_help_needed",
                    models.BooleanField(
                        default=False, help_text="유저의 코드에 도움이 필요한지 여부를 입력해주세요."
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "problem",
                    models.ForeignKey(
                        help_text="활동 문제를 입력해주세요.",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="activities.crewactivityproblemdao",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="유저를 입력해주세요.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="CrewActivity",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("activities.crewactivitydao",),
        ),
        migrations.CreateModel(
            name="CrewActivityProblem",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("activities.crewactivityproblemdao",),
        ),
        migrations.CreateModel(
            name="CrewActivitySubmission",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("activities.crewactivitysubmissiondao",),
        ),
        migrations.AddConstraint(
            model_name="crewactivityproblemdao",
            constraint=models.UniqueConstraint(
                fields=("activity", "order"), name="unique_order_per_activity_problem"
            ),
        ),
    ]
