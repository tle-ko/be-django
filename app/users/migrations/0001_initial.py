# Generated by Django 4.2.13 on 2024-09-01 07:35

from django.db import migrations, models
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserEmailVerification",
            fields=[
                (
                    "email",
                    models.EmailField(
                        help_text="이메일 주소",
                        max_length=254,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "verification_code",
                    models.TextField(blank=True, help_text="인증 코드", null=True),
                ),
                (
                    "verification_token",
                    models.TextField(blank=True, help_text="인증 토큰", null=True),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="username"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        help_text="프로필 이미지",
                        null=True,
                        upload_to=users.models.get_profile_image_path,
                    ),
                ),
                ("boj_username", models.CharField(help_text="백준 아이디", max_length=40)),
                ("token", models.TextField(blank=True, default=None, null=True)),
                (
                    "refresh_token",
                    models.TextField(blank=True, default=None, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("first_name", models.TextField(blank=True, default=None, null=True)),
                ("last_name", models.TextField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
