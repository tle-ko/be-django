{
    "items": [
        {
            "title": "A+B",
            "link": "https://www.acmicpc.net/problem/1000",
            "description": "두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.",
            "input_description": "첫째 줄에 A와 B가 주어진다. (0 < A, B < 10)",
            "output_description": "첫째 줄에 A+B를 출력한다.",
            "time_limit": 1.0,
            "memory_limit": 128.0,
            "created_at": "2024-06-03 13:24:06.988383",
            "updated_at": "2024-06-03 13:24:06.988446"
        },
        {
            "title": "피보나치 함수",
            "link": "https://www.acmicpc.net/problem/1003",
            "description": "다음 소스는 N번째 피보나치 수를 구하는 C++ 함수이다.\r\n\r\nint fibonacci(int n) {\r\n    if (n == 0) {\r\n        printf(\"0\");\r\n        return 0;\r\n    } else if (n == 1) {\r\n        printf(\"1\");\r\n        return 1;\r\n    } else {\r\n        return fibonacci(n‐1) + fibonacci(n‐2);\r\n    }\r\n}\r\nfibonacci(3)을 호출하면 다음과 같은 일이 일어난다.\r\n\r\nfibonacci(3)은 fibonacci(2)와 fibonacci(1) (첫 번째 호출)을 호출한다.\r\nfibonacci(2)는 fibonacci(1) (두 번째 호출)과 fibonacci(0)을 호출한다.\r\n두 번째 호출한 fibonacci(1)은 1을 출력하고 1을 리턴한다.\r\nfibonacci(0)은 0을 출력하고, 0을 리턴한다.\r\nfibonacci(2)는 fibonacci(1)과 fibonacci(0)의 결과를 얻고, 1을 리턴한다.\r\n첫 번째 호출한 fibonacci(1)은 1을 출력하고, 1을 리턴한다.\r\nfibonacci(3)은 fibonacci(2)와 fibonacci(1)의 결과를 얻고, 2를 리턴한다.\r\n1은 2번 출력되고, 0은 1번 출력된다. N이 주어졌을 때, fibonacci(N)을 호출했을 때, 0과 1이 각각 몇 번 출력되는지 구하는 프로그램을 작성하시오.",
            "input_description": "첫째 줄에 테스트 케이스의 개수 T가 주어진다.\r\n\r\n각 테스트 케이스는 한 줄로 이루어져 있고, N이 주어진다. N은 40보다 작거나 같은 자연수 또는 0이다.",
            "output_description": "각 테스트 케이스마다 0이 출력되는 횟수와 1이 출력되는 횟수를 공백으로 구분해서 출력한다.",
            "time_limit": 0.25,
            "memory_limit": 128.0,
            "created_at": "2024-06-03 18:24:21.358190",
            "updated_at": "2024-06-03 18:24:21.358210"
        },
        {
            "title": "평점 변환",
            "link": "https://www.acmicpc.net/problem/31799",
            "description": "2023학년도까지 대구과고에서는 학생들의 한 학기 동안의 성적에 따라 A+, A0, A-, B+, B0, B-, C+, C0, C-의 아홉 가지 평어 가운데 하나를 부여하였다. 그러나 상대평가 중심의 평어 체제는 학생들 간의 과도한 경쟁을 유도하는 부작용이 있었다. 그래서 2024학년도부터는 B(Beginning), D(Developing), P(Proficient), E(Exceeding)의 네 가지 평어 가운데 하나를 부여하는 방식으로 체제를 바꿀 계획이다. 새로운 평어 체제는 상대평가 기간이 아닌 개인의 성장 과정에 따라 평어가 부여되는 방식이므로 기존 평어 체제의 문제점을 해결할 것으로 기대하고 있다.\r\n\r\n대구과고 학생들은 2023학년도 이전과 2024학년도 이후의 평어 체제가 완전히 달라서 자신의 발전 과정을 정확하게 알기 어려워졌다. 이에 따라 2023학년도 이전의 평어를 새로운 평어 체제에 맞추어 변환하는 공식적인 기준을 발표하였다.\r\n\r\n평어가 C+, C0, C- 가운데 하나이면, 새로운 평어는 B이다.\r\n평어가 B0, B- 가운데 하나이면\r\n첫 학기이거나 이전 학기의 평어가 C+, C0, C- 가운데 하나이면, 새로운 평어는 D이다.\r\n이전 학기의 평어가 A+, A0, A-, B+, B0, B- 가운데 하나이면, 새로운 평어는 B이다.\r\n평어가 A-, B+ 가운데 하나이면\r\n첫 학기이거나 이전 학기의 평어가 B0, B-, C+, C0, C- 가운데 하나이면, 새로운 평어는 P이다.\r\n이전 학기의 평어가 A+, A0, A-, B+ 가운데 하나이면, 새로운 평어는 D이다.\r\n평어가 A0이면\r\n첫 학기이거나 이전 학기의 평어가 A-, B+, B0, B-, C+, C0, C- 가운데 하나이면, 새로운 평어는 E이다.\r\n이전 학기의 평어가 A+, A0 가운데 하나이면, 새로운 평어는 P이다.\r\n평어가 A+이면 새로운 평어는 E이다.\r\n대구과고에 다니는 은성이는 기존 평어 체제로 부여되었던 자신의 $N$학기 동안의 평어를 새로운 평어 체제에 맞게 변환하고 싶다. 하지만 평어 변환 기준이 너무 복잡해 여러분에게 대신 이 일을 맡기려고 한다. $N$학기 동안의 평어가 첫 학기부터 $N$번째 학기까지 순서대로 공백 없이 주어질 때, 새로운 평어 체제에 맞게 변환한 결과를 출력하는 프로그램을 작성하라. 단, 은성이는 A0, B0, C0에서 실수로 0을 생략하여 'A', 'B', 'C'와 같이 적을 때도 있다고 한다.",
            "input_description": "첫 번째 줄에 은성이가 대구과고에 다닌 학기의 수 $N$이 주어진다.\r\n\r\n두 번째 줄에 은성이의 $N$학기 동안의 평어를 공백 없이 순서대로 나열한 문자열이 주어진다.\r\n\r\n $1\\le N\\le 200\\,000$",
            "output_description": "은성이의 $N$학기 동안의 평어를 새로운 체제에 맞게 변환한 결과를 첫 학기부터 공백 없이 순서대로 나열한 길이 $N$의 문자열을 출력한다.",
            "time_limit": 1.0,
            "memory_limit": 1024.0,
            "created_at": "2024-06-16 13:51:26.551732",
            "updated_at": "2024-06-16 13:51:26.551746"
        },
        {
            "title": "CCW",
            "link": "https://www.acmicpc.net/problem/11758",
            "description": "2차원 좌표 평면 위에 있는 점 3개 P1, P2, P3가 주어진다. P1, P2, P3를 순서대로 이은 선분이 어떤 방향을 이루고 있는지 구하는 프로그램을 작성하시오.",
            "input_description": "첫째 줄에 P1의 (x1, y1), 둘째 줄에 P2의 (x2, y2), 셋째 줄에 P3의 (x3, y3)가 주어진다. (-10,000 ≤ x1, y1, x2, y2, x3, y3 ≤ 10,000) 모든 좌표는 정수이다. P1, P2, P3의 좌표는 서로 다르다.",
            "output_description": "P1, P2, P3를 순서대로 이은 선분이 반시계 방향을 나타내면 1, 시계 방향이면 -1, 일직선이면 0을 출력한다.",
            "time_limit": 1.0,
            "memory_limit": 256.0,
            "created_at": "2024-06-16 13:54:02.295495",
            "updated_at": "2024-06-16 13:54:02.295540"
        },
        {
            "title": "접두사 찾기",
            "link": "https://www.acmicpc.net/problem/14426",
            "description": "문자열 S의 접두사란 S의 가장 앞에서부터 부분 문자열을 의미한다. 예를 들어, S = \"codeplus\"의 접두사는 \"code\", \"co\", \"codepl\", \"codeplus\"가 있고, \"plus\", \"s\", \"cude\", \"crud\"는 접두사가 아니다.\r\n\r\n총 N개의 문자열로 이루어진 집합 S가 주어진다.\r\n\r\n입력으로 주어지는 M개의 문자열 중에서 집합 S에 포함되어 있는 문자열 중 적어도 하나의 접두사인 것의 개수를 구하는 프로그램을 작성하시오.",
            "input_description": "첫째 줄에 문자열의 개수 N과 M (1 ≤ N ≤ 10,000, 1 ≤ M ≤ 10,000)이 주어진다.\r\n\r\n다음 N개의 줄에는 집합 S에 포함되어 있는 문자열이 주어진다.\r\n\r\n다음 M개의 줄에는 검사해야 하는 문자열이 주어진다.\r\n\r\n입력으로 주어지는 문자열은 알파벳 소문자로만 이루어져 있으며, 길이는 500을 넘지 않는다. 집합 S에 같은 문자열이 여러 번 주어지는 경우는 없다.",
            "output_description": "첫째 줄에 M개의 문자열 중에 총 몇 개가 포함되어 있는 문자열 중 적어도 하나의 접두사인지 출력한다.",
            "time_limit": 1.0,
            "memory_limit": 1536.0,
            "created_at": "2024-06-16 13:55:49.874302",
            "updated_at": "2024-06-16 13:55:49.874324"
        },
        {
            "title": "벽 부수고 이동하기",
            "link": "https://www.acmicpc.net/problem/2206",
            "description": "N×M의 행렬로 표현되는 맵이 있다. 맵에서 0은 이동할 수 있는 곳을 나타내고, 1은 이동할 수 없는 벽이 있는 곳을 나타낸다. 당신은 (1, 1)에서 (N, M)의 위치까지 이동하려 하는데, 이때 최단 경로로 이동하려 한다. 최단경로는 맵에서 가장 적은 개수의 칸을 지나는 경로를 말하는데, 이때 시작하는 칸과 끝나는 칸도 포함해서 센다.\r\n\r\n만약에 이동하는 도중에 한 개의 벽을 부수고 이동하는 것이 좀 더 경로가 짧아진다면, 벽을 한 개 까지 부수고 이동하여도 된다.\r\n\r\n한 칸에서 이동할 수 있는 칸은 상하좌우로 인접한 칸이다.\r\n\r\n맵이 주어졌을 때, 최단 경로를 구해 내는 프로그램을 작성하시오.",
            "input_description": "첫째 줄에 N(1 ≤ N ≤ 1,000), M(1 ≤ M ≤ 1,000)이 주어진다. 다음 N개의 줄에 M개의 숫자로 맵이 주어진다. (1, 1)과 (N, M)은 항상 0이라고 가정하자.",
            "output_description": "첫째 줄에 최단 거리를 출력한다. 불가능할 때는 -1을 출력한다.",
            "time_limit": 2.0,
            "memory_limit": 192.0,
            "created_at": "2024-06-16 13:56:30.174235",
            "updated_at": "2024-06-16 13:56:30.174268"
        },
        {
            "title": "용액",
            "link": "https://www.acmicpc.net/problem/2467",
            "description": "KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다. 산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.\r\n\r\n같은 양의 두 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다. 이 연구소에서는 같은 양의 두 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다. \r\n\r\n예를 들어, 주어진 용액들의 특성값이 [-99, -2, -1, 4, 98]인 경우에는 특성값이 -99인 용액과 특성값이 98인 용액을 혼합하면 특성값이 -1인 용액을 만들 수 있고, 이 용액의 특성값이 0에 가장 가까운 용액이다. 참고로, 두 종류의 알칼리성 용액만으로나 혹은 두 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.\r\n\r\n산성 용액과 알칼리성 용액의 특성값이 정렬된 순서로 주어졌을 때, 이 중 두 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액을 찾는 프로그램을 작성하시오.",
            "input_description": "첫째 줄에는 전체 용액의 수 N이 입력된다. N은 2 이상 100,000 이하의 정수이다. 둘째 줄에는 용액의 특성값을 나타내는 N개의 정수가 빈칸을 사이에 두고 오름차순으로 입력되며, 이 수들은 모두 -1,000,000,000 이상 1,000,000,000 이하이다. N개의 용액들의 특성값은 모두 서로 다르고, 산성 용액만으로나 알칼리성 용액만으로 입력이 주어지는 경우도 있을 수 있다.",
            "output_description": "첫째 줄에 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액의 특성값을 출력한다. 출력해야 하는 두 용액은 특성값의 오름차순으로 출력한다. 특성값이 0에 가장 가까운 용액을 만들어내는 경우가 두 개 이상일 경우에는 그 중 아무것이나 하나를 출력한다.",
            "time_limit": 1.0,
            "memory_limit": 128.0,
            "created_at": "2024-06-16 13:57:24.447647",
            "updated_at": "2024-06-16 13:57:24.447661"
        }
    ]
}